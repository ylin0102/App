pipeline {
    agent any

    environment {
        GIT_CREDENTIAL = 'lyn_git'
        DOCKER_CREDENTIAL = 'lyn_docker'
    }

    tools {
        maven 'Maven 3.0'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout(
                        [$class                           : 'GitSCM',
                         branches                         : [[name: '*/master']],
                         doGenerateSubmoduleConfigurations: false,
                         extensions                       : [],
                         submoduleCfg                     : [],
                         userRemoteConfigs                : [[credentialsId: "${GIT_CREDENTIAL}", url: 'https://github.com/ylin0102/App.git']]
                        ])
                echo 'Check out successfully!'
            }
        }
        stage('Build && Sonar Analysis') {
            steps {
                sh 'mvn clean install sonar:sonar -Dsonar.host.url=http://88.198.25.89:9000/ -Dsonar.projectKey=App -Dsonar.login=3c5411ed4af036adeaae7b309ce456fdff95b2de'
                echo "Build successfully!"
            }
        }
        stage("Quality Gate"){
            timeout(time: 1, unit: 'HOURS') {
                def qg = waitForQualityGate()
                if (qg.status != 'OK') {
                    error "Pipeline aborted due to quality gate failure: ${qg.status}"
                }
            }
        }
        stage('Containerization') {
            steps {
                //sh 'ls'
                sh 'mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar)'
                sh 'docker build -t lyn0102/app:sprint0 .'
                echo "Docker Image Built successfully"
            }
        }
        stage('Publish') {
            steps {
                withDockerRegistry(credentialsId: "${DOCKER_CREDENTIAL}", url: '') {
                    sh "docker push lyn0102/app:sprint0"
                    echo "Publish Image successfully"
                }
            }
        }
    }
}